// Mocks generated by Mockito 5.4.4 from annotations
// in hyrule/test/results_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:hyrule/controllers/api_controller.dart' as _i3;
import 'package:hyrule/data/api/data_api.dart' as _i2;
import 'package:hyrule/domain/models/entry.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDataApi_0 extends _i1.SmartFake implements _i2.DataApi {
  _FakeDataApi_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ApiController].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiController extends _i1.Mock implements _i3.ApiController {
  MockApiController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.DataApi get dataApi => (super.noSuchMethod(
        Invocation.getter(#dataApi),
        returnValue: _FakeDataApi_0(
          this,
          Invocation.getter(#dataApi),
        ),
      ) as _i2.DataApi);

  @override
  _i4.Future<List<_i5.Entry>> getEntriesByCategory(
          {required String? category}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getEntriesByCategory,
          [],
          {#category: category},
        ),
        returnValue: _i4.Future<List<_i5.Entry>>.value(<_i5.Entry>[]),
      ) as _i4.Future<List<_i5.Entry>>);
}
